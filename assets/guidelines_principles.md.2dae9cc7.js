import{_ as e,c as i,o as s,d as n}from"./app.bb503f7b.js";const v=JSON.parse('{"title":"Principles","description":"","frontmatter":{},"headers":[],"relativePath":"guidelines/principles.md"}'),t={name:"guidelines/principles.md"},a=n('<h1 id="principles" tabindex="-1">Principles <a class="header-anchor" href="#principles" aria-hidden="true">#</a></h1><p>RTA has a wide variety of business processes backed by multiple teams. A comprehensive set of guidelines covering all scenarios is difficult to achieve. Hence the recommendations below are intended to be a set of guiding principles that will help us achieve a consistent API and event design across all agencies and initiatives.</p><ol><li>Design APIs and Events around business capabilities</li><li>Treat APIs as Products with an owner, cost and price</li><li>Follow a &quot;Contract-First&quot; strategy for APIs and Events</li><li>Centrally govern and gradually evolve API and Event Schema</li><li>Document APIs/Events using OpenAPI or AsyncAPI</li><li>Provision APIs and Events to be independently testable</li><li>Be liberal in what you accept, be conservative in what you send</li><li>Prefer REST APIs with JSON payloads primarily</li><li>Secured APIs and Events using OAuth2 tokens or mTLS certificates</li><li>Adopt Single Responsibility Principle for services</li></ol>',3),l=[a];function r(o,c,d,p,u,_){return s(),i("div",null,l)}const P=e(t,[["render",r]]);export{v as __pageData,P as default};
